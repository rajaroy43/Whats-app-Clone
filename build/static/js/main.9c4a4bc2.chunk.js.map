{"version":3,"sources":["firebase.js","StateProvider.js","Chat.js","SidebarChat.js","SideBar.js","Login.js","Welcome.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initalState","children","Provider","value","useReducer","useStatevalue","useContext","Chat","useState","input","setinput","roomid","useParams","roomName","setroomName","messages","setmessages","user","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","className","Avatar","src","length","Date","timestamp","toDate","toUTCString","IconButton","message","displayName","action","onSubmit","e","preventDefault","replaceAll","add","FieldValue","serverTimestamp","type","onChange","target","SidebarChat","addNewChat","id","onClick","window","prompt","to","SideBar","rooms","setrooms","unsubscribe","photoURL","signOut","title","placeholder","room","key","Login","dispatch","signIn","a","signInWithPopup","result","alert","alt","Button","Welcome","videoRef","useRef","current","play","loop","ref","App","onAuthStateChanged","console","log","path","exact","Boolean","location","hostname","match","state","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9c4a4bc2.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDm-dC_JopkmxGEEHpTT0bghC9YHWRR7Sw\",\r\n    authDomain: \"whatsapp-clone-d770f.firebaseapp.com\",\r\n    databaseURL: \"https://whatsapp-clone-d770f.firebaseio.com\",\r\n    projectId: \"whatsapp-clone-d770f\",\r\n    storageBucket: \"whatsapp-clone-d770f.appspot.com\",\r\n    messagingSenderId: \"945467437377\",\r\n    appId: \"1:945467437377:web:20cd479be46fd704e5f1c0\",\r\n    measurementId: \"G-T7ZMX29SC4\"\r\n  };\r\n\r\nconst firebaseApp=firebase.initializeApp(firebaseConfig);\r\nconst db=firebaseApp.firestore();\r\nconst auth=firebase.auth();\r\nconst provider=new firebase.auth.GoogleAuthProvider();\r\nexport {auth,provider}\r\nexport default db;","import React,{ createContext, useContext, useReducer } from \"react\";\r\nconst StateContext = createContext();\r\nexport const StateProvider=({reducer,initalState,children})=>{\r\n    return(\r\n    <StateContext.Provider value={useReducer(reducer,initalState)}>\r\n    {children}\r\n    </StateContext.Provider>\r\n    );\r\n};\r\nexport const useStatevalue=()=>useContext(StateContext);\r\n\r\n\r\n","import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./Chat.css\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"./firebase\";\r\nimport { useStatevalue } from \"./StateProvider\";\r\nimport firebase from 'firebase';\r\nfunction Chat() {\r\n  const [input, setinput] = useState(\"\");\r\n  const { roomid } = useParams();\r\n  const [roomName, setroomName] = useState(\"\");\r\n  const [messages, setmessages] = useState([]);\r\n  const [{user},]=useStatevalue()\r\n  useEffect(() => {\r\n    if (roomid) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomid)\r\n        .onSnapshot((snapshot) => setroomName(snapshot.data().name));\r\n      db.collection(\"rooms\")\r\n        .doc(roomid)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) =>\r\n          setmessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, [roomid]);\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    const checkEmpty = input.replaceAll(\" \", \"\");\r\n    if (checkEmpty) {\r\n      db.collection(\"rooms\").doc(roomid).collection(\"messages\").add({\r\n        message:input,\r\n        name:user.displayName,\r\n        timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n      })\r\n      setinput(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat__header\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${roomid}.svg`} />\r\n        <div className=\"chat__headerInfo\">\r\n          <h3>{roomName}</h3>\r\n         {messages?.length>0?<p>last seen at...{new Date(messages[messages.length-1]?.timestamp?.toDate()).toUTCString()}</p>:\"\"}\r\n        </div>\r\n        <div className=\"chat__headerRight\">\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFileIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"chat__body\">\r\n        {messages?.map((message) => (\r\n          <p className={`chat__message ${message.name===user.displayName && `chat__reciever`}`}>\r\n            <span className=\"chat__name\">{message.name}</span>\r\n            <div className=\"chat__messageInfo\">\r\n              <p>{message.message}</p>\r\n              <span className=\"chat__timestamp\">{new Date(message.timestamp?.toDate()).toUTCString()}</span>\r\n            </div>\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat__footer\">\r\n        <InsertEmoticonIcon />\r\n        <form action=\"post\" onSubmit={sendMessage}>\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={(e) => setinput(e.target.value)}\r\n          />\r\n          <button type=\"submit\">\r\n            {input.replaceAll(\" \", \"\") ? <SendIcon /> : <MicIcon />}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import { Avatar } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport db from './firebase';\r\nimport  './SidebarChat.css';\r\nfunction SidebarChat({addNewChat,id,name}) {\r\n    const [messages, setmessages] = useState([])\r\n    useEffect(() => {\r\n       if(id){\r\n           db.collection(\"rooms\").doc(id).collection(\"messages\").orderBy(\"timestamp\",\"desc\").onSnapshot(snapshot=>(\r\n               setmessages(snapshot.docs.map(doc=>doc.data()))\r\n           ))\r\n       }\r\n    }, [id])\r\n    const createChat=()=>{\r\n        const roomName=window.prompt(\"Please enter name for yor room\");\r\n        if(roomName?.replaceAll(' ','')){\r\n            db.collection(\"rooms\").add({\r\n                name:roomName\r\n            })\r\n        }\r\n    }\r\n    return !addNewChat?(\r\n        <Link to={`/rooms/${id}`}>\r\n            <div className=\"sidebarChat\">\r\n            <Avatar src={`https://avatars.dicebear.com/api/human/${id}.svg`}/>\r\n            <div className=\"sidebarChat__info\">\r\n                <h3>{name}</h3>\r\n                <p>{messages[0]?.message}</p>\r\n            </div>\r\n        </div>\r\n        </Link>\r\n    ):(\r\n        <div className=\"sidebarChat\" onClick={createChat}>\r\n            <h2>Add new Chat</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarChat\r\n","import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./SideBar.css\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport db, { auth } from './firebase';\r\nimport { useStatevalue } from \"./StateProvider\";\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nfunction SideBar() {\r\n  const [rooms, setrooms] = useState([]);\r\n  const [{ user },] = useStatevalue();\r\n  useEffect(() => {\r\n    const unsubscribe=db.collection(\"rooms\").onSnapshot(snapshot=>(\r\n      setrooms(snapshot.docs.map(doc=>({\r\n        id:doc.id,\r\n        data:doc.data()\r\n      })))\r\n    ))\r\n    return ()=>{\r\n      unsubscribe();\r\n    }\r\n  }, [ ])\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar__header\">\r\n        <Avatar src={user?.photoURL}/>\r\n        <div className=\"sidebar__headerRight\">\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ChatIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <button onClick={e=>auth.signOut()} title=\"LogOut\" className=\"sidebar__logout\"><ExitToAppIcon/> </button>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebarSearch__container\">\r\n        <div className=\"sidebar__search\">\r\n          <SearchIcon />\r\n          <input type=\"text\" placeholder=\"Search or start new Chat\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar__chats\">\r\n          <SidebarChat addNewChat/>\r\n         {rooms?.map(room=>(\r\n           <SidebarChat key={room.id} id={room.id} name={room.data.name}/>\r\n         ))}\r\n         \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SideBar;\r\n","import React from 'react'\r\nimport \"./Login.css\"\r\nimport{Button} from '@material-ui/core'\r\nimport { auth ,provider} from './firebase'\r\nimport { useStatevalue } from './StateProvider'\r\nfunction Login() {\r\n    const[,dispatch]=useStatevalue();\r\n    const signIn=async()=>{\r\n        try {\r\n            const result=await auth.signInWithPopup(provider);\r\n            dispatch({\r\n                type:\"SET_USER\",\r\n                user:result.user\r\n            })\r\n        } catch (error) {\r\n            alert(error.message)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"login\">\r\n            <div className=\"login__container\">\r\n                <img src=\"https://image.flaticon.com/icons/png/512/124/124034.png\" alt=\"whatsapp\"/>\r\n                <div className=\"login__text\">\r\n                    <h2>Sign in to whatsapp</h2>\r\n                </div>\r\n                <Button onClick={signIn}>Sign in With Google</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, {useEffect, useRef } from \"react\";\r\nimport \"./Welcome.css\";\r\n\r\nfunction Welcome() {\r\n    const videoRef=useRef(null);\r\n    useEffect(() => {\r\n        videoRef.current.play();\r\n    }, [])\r\n  return (\r\n    <div className=\"welcome\">\r\n      <div className=\"welcome__container\">\r\n      <h2 className=\"welcome__info\">Welcome To Decentralised Messaging dapp....</h2>\r\n        <video\r\n        className=\"welcome__video\"\r\n          loop\r\n          ref={videoRef}\r\n          src=\"https://cdn.videvo.net/videvo_files/video/free/2013-09/small_watermarked/RedBloodCellsVidevo_preview.webm\"\r\n        ></video>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Welcome;\r\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Chat from \"./Chat\";\nimport SideBar from \"./SideBar\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { useStatevalue } from \"./StateProvider\";\nimport firebase from 'firebase';\nimport Welcome from \"./Welcome\";\nfunction App() {\n  const [{ user }, dispatch] = useStatevalue();\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user)=>{\n      if(user){\n        console.log(user);\n        dispatch({\n          type:\"SET_USER\",\n          user:user\n      })\n      }\n      else{\n        dispatch({\n          type:\"SET_USER\",\n          user:null\n      })\n      }\n    })\n  }, [])\n  return (\n    <div className=\"app\">\n      {user ? (\n        <div className=\"app__body\">\n          <Router>\n          <SideBar />\n            <Switch>\n              <Route path=\"/\" exact>\n                <Welcome/>\n              </Route>\n              <Route path=\"/rooms/:roomid\">\n                <Chat />\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      ) : (\n        <Login />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initalState={\r\n    user:null\r\n}\r\nconst  reducer=(state,action)=>{\r\nconsole.log(action);\r\nswitch (action.type) {\r\n    case \"SET_USER\":\r\n        return{\r\n            ...state,\r\n            user:action.user\r\n        }\r\n\r\n    default:return state;\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport {StateProvider} from './StateProvider';\nimport reducer,{initalState} from './reducer'\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initalState={initalState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}